{"version":3,"sources":["redux/actions/types.js","App.js","reportWebVitals.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["SET_EMAIL","SET_IS_LOGGED_IN","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","INITIAL_STATE","email","isLoggedIn","userReducer","state","action","type","alert","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+IAAA,kGAAO,IAAMA,EAAY,YACZC,EAAmB,oB,wGCqBjBC,EAZH,WACV,OACE,sBAAKC,UAAU,MAAf,yBAEE,cAAC,IAAD,QCFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCP0BQ,EAAQ,IAAxCb,E,EAAAA,UAAWC,E,EAAAA,iBAEba,EAAgB,CACpBC,MAAO,GACPC,YAAY,GAyBCC,EAtBK,WAAoC,IAAnCC,EAAkC,uDAA1BJ,EAAeK,EAAW,uCACrD,OAAQA,EAAOC,MACb,KAAKpB,EACH,OAAO,2BACFkB,GADL,IAEEH,MAAOI,EAAOJ,QAElB,KAAKd,EACH,MAAoB,KAAhBiB,EAAMH,MACD,2BACFG,GADL,IAEEF,WAAYG,EAAOH,cAGrBK,MAAM,GAAD,OAAIH,EAAMH,MAAV,qBACEG,GAEX,QACE,OAAOA,ICrBEI,cAAgB,CAC7BL,gB,gBCSIM,EAAQC,YAAYC,EAAaC,YAAgBC,MAEvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINQ,SAASC,eAAe,SAM1B5B,M","file":"static/js/main.a528766d.chunk.js","sourcesContent":["export const SET_EMAIL = 'SET_EMAIL';\nexport const SET_IS_LOGGED_IN = 'SET_IS_LOGGED_IN';","import React from 'react'\n// TODO: install prop-types\nimport './App.css'\n\nimport {\n  Switch,\n  // Route,\n  // Link,\n} from \"react-router-dom\"\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      Tokn Project\n      <Switch>\n        {/* <Route path=\"/\" component={ Home } /> */}\n        {/* <Route path=\"*\" component={ Home } /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const { SET_EMAIL, SET_IS_LOGGED_IN } = require('../actions/types');\n\nconst INITIAL_STATE = {\n  email: '',\n  isLoggedIn: false\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_EMAIL:\n      return {\n        ...state,\n        email: action.email\n      }\n    case SET_IS_LOGGED_IN:\n      if (state.email !== '') {\n        return {\n          ...state,\n          isLoggedIn: action.isLoggedIn\n        }\n      } else {\n        alert(`${state.email} does not exist!`)\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer","import { combineReducers } from 'redux';\n\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n  userReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers/rootReducer';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}